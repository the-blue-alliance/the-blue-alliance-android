{
  "swagger": "2.0",
  "info": {
    "title": "The Blue Alliance APIv3",
    "description": "Access data about the FIRST Robotics Competition",
    "version": "3"
  },
  "host": "www.thebluealliance.com",
  "schemes": [
    "http"
  ],
  "basePath": "/api/v3",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v3/teams/{page}": {
      "get": {
        "summary": "Team List Request",
        "operationId": "fetchTeamPage",
        "description": "Returns a page containing 500 teams",
        "parameters": [
          {
            "name": "page",
            "description": "A page of teams, zero-indexed. Each page consists of teams whose numbers start at start = 500 * page_num and end at end = start + 499, inclusive.",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/team_list_response"
          }
        }
      }
    },
    "/api/v3/team/{team_key}": {
      "get": {
        "summary": "Single Team Request",
        "operationId": "fetchTeam",
        "description": "This endpoit returns information about a single team",
        "parameters": [
          {
            "$ref": "#/parameters/team_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "A single team object",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        }
      }
    },
    "/api/v3/team/{team_key}/events/{year}": {
      "get": {
        "summary": "Team Events Request",
        "operationId": "fetchTeamEvents",
        "description": "Fetch all events for a given team in a given year",
        "parameters": [
          {
            "$ref": "#/parameters/team_key_param"
          },
          {
            "$ref": "#/parameters/year_param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/event_list_response"
          }
        }
      }
    },
    "/api/v3/team/{team_key}/event/{event_key}/awards": {
      "get": {
        "summary": "Team Event Awards Request",
        "operationId": "fetchTeamAtEventAwards",
        "description": "Fetch all awards won by a single team at an event",
        "parameters": [
          {
            "$ref": "#/parameters/team_key_param"
          },
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/award_list_response"
          }
        }
      }
    },
    "/api/v3/team/{team_key}/event/{event_key}/matches": {
      "get": {
        "summary": "Team Event Matches Request",
        "operationId": "fetchTeamAtEventMatches",
        "description": "Fetch all matches for a single team at an event",
        "parameters": [
          {
            "$ref": "#/parameters/team_key_param"
          },
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/match_list_response"
          }
        }
      }
    },
    "/api/v3/team/{team_key}/event/{event_key}/status": {
      "get": {
        "summary": "Team Event Status Request",
        "operationId": "fetchTeamAtEventStatus",
        "parameters": [
          {
            "$ref": "#/parameters/team_key_param"
          },
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/team_at_event_status_response"
          }
        }
      }

    },
    "/api/v3/team/{team_key}/years_participated": {
      "get": {
        "summary": "Team Years Participated Request",
        "operationId": "fetchTeamYearsParticipated",
        "description": "Fetch the years for which the team was registered for an event",
        "parameters": [
          {
            "$ref": "#/parameters/team_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of years where the team participated in an event",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "/api/v3/team/{team_key}/media/{year}": {
      "get": {
        "summary": "Team Media Request",
        "operationId": "fetchTeamMediaInYear",
        "description": "Fetch media associated with a team in a given year",
        "parameters": [
          {
            "$ref": "#/parameters/team_key_param"
          },
          {
            "$ref": "#/parameters/year_param"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Media models associated with the team in the year",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Media"
              }
            }
          }
        }
      }
    },
    "/api/v3/team/{team_key}/social_media": {
      "get": {
        "summary": "Team Social Media Request",
        "operationId": "fetchTeamSocialMedia",
        "description": "Fetch social media profiles for a team",
        "parameters": [
          {
            "$ref": "#/parameters/team_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Media models that represent the team's social media profiles",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Media"
              }
            }
          }
        }
      }
    },
    "/api/v3/team/{team_key}/robots": {
      "get": {
        "summary": "Team Robots Request",
        "operationId": "fetchTeamRobots",
        "description": "Fetch all robots a team has made since 2015. Robot names are scraped from TIMS.",
        "parameters": [
          {
            "$ref": "#/parameters/team_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Robot models",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Robot"
              }
            }
          }
        }
      }
    },
    "/api/v3/team/{team_key}/districts": {
      "get": {
        "summary": "Team Districts Request",
        "operationId": "fetchTeamDistricts",
        "description": "Fetch all district keys that a team has competed in",
        "parameters": [
          {
            "$ref": "#/parameters/team_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of district keys",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/v3/events/{year}": {
      "get": {
        "summary": "Event List Request",
        "operationId": "fetchEventsInYear",
        "description": "Fetch all events in a year",
        "parameters": [
          {
            "$ref": "#/parameters/year_param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/event_list_response"
          }
        }
      }
    },
    "/api/v3/event/{event_key}": {
      "get": {
        "summary": "Event Info Request",
        "operationId": "fetchEvent",
        "description": "Fetch details for one event",
        "parameters": [
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "A single event model",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        }
      }
    },
    "/api/v3/event/{event_key}/teams": {
      "get": {
        "summary": "Event Teams Request",
        "operationId": "fetchEventTeams",
        "description": "Fetch teams attending the given event",
        "parameters": [
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/team_list_response"
          }
        }
      }
    },
    "/api/v3/event/{event_key}/matches": {
      "get": {
        "summary": "Event Matches Request",
        "operationId": "fetchEventMatches",
        "description": "Fetch matches for the given event",
        "parameters": [
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/match_list_response"
          }
        }
      }
    },
    "/api/v3/event/{event_key}/oprs": {
      "get": {
        "summary": "Event OPR Request",
        "operationId": "fetchEventOPR",
        "description": "Fetch OPR details for one event.",
        "parameters": [
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a json dict with keys for 'oprs', 'dprs', and 'ccwms'.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v3/event/{event_key}/insights": {
      "get": {
        "summary": "Event Insights Request",
        "operationId": "fetchEventInsights",
        "description": "Fetch insights for one event.",
        "parameters": [
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a json dict with year specific insight data",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v3/event/{event_key}/rankings": {
      "get": {
        "summary": "Event Rankings Request",
        "operationId": "fetchEventRankings",
        "description": "Fetch ranking details for one event.",
        "parameters": [
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object outlining event rankings",
            "schema": {
              "$ref": "#/definitions/RankingResponseObject"
            }
          }
        }
      }
    },
    "/api/v3/event/{event_key}/awards": {
      "get": {
        "summary": "Event Awards Request",
        "operationId": "fetchEventAwards",
        "description": "Fetch awards for the given event",
        "parameters": [
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/award_list_response"
          }
        }
      }
    },
    "/api/v3/event/{event_key}/alliances": {
      "get": {
        "summary": "Event Alliances Request",
        "operationId": "fetchEventAlliances",
        "description": "Fetch alliance information for one event.",
        "parameters": [
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of alliance elements.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventAlliance"
              }
            }
          }
        }
      }
    },
    "/api/v3/event/{event_key}/district_points": {
      "get": {
        "summary": "Event District Points Request",
        "operationId": "fetchEventDistrictPoints",
        "description": "Fetch district points for one event.",
        "parameters": [
          {
            "$ref": "#/parameters/event_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a json dict containing district point data.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v3/match/{match_key}": {
      "get": {
        "summary": "Match Request",
        "operationId": "fetchMatch",
        "description": "Fetch details about a single match",
        "parameters": [
          {
            "$ref": "#/parameters/match_key_param"
          }
        ],
        "responses": {
          "200": {
            "description": "Details about the requested match",
            "schema": {
              "$ref": "#/definitions/Match"
            }
          }
        }
      }
    },
    "/api/v3/districts/{year}": {
      "get": {
        "summary": "District List Request",
        "operationId": "fetchDistrictList",
        "description": "Fetch a list of active districts in the given year",
        "parameters": [
          {
            "$ref": "#/parameters/year_param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/district_list_response"
          }
        }
      }
    },
    "/api/v3/district/{district_key}/events": {
      "get": {
        "summary": "District Events Request",
        "operationId": "fetchDistrictEvents",
        "description": "Fetch a list of events within a given district",
        "parameters": [
          {
            "name": "district_key",
            "description": "Key identifying a district (e.g. '2016ne')",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/event_list_response"
          }
        }
      }
    },
    "/api/v3/district/{district_key}/rankings": {
      "get": {
        "summary": "District Rankings Reques",
        "operationId": "fetchDistrictRankings",
        "description": "Fetch district rankings",
        "parameters": [
          {
            "name": "district_key",
            "description": "Key identifying a district (e.g. '2016ne')",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/district_rankings_response"
          }
        }
      }
    },
    "/api/v3/district/{district_key}/teams": {
      "get": {
        "summary": "District Teams Request",
        "operationId": "fetchDistrictTeamsInYear",
        "description": "Fetch a list of teams within a given district",
        "parameters": [
          {
            "name": "district_key",
            "description": "Key identifying a district (e.g. '2016ne')",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/team_list_response"
          }
        }
      }
    }
  },
  "parameters": {
    "team_key_param": {
      "name": "team_key",
      "description": "Key identifying a single team, has format frcXXXX, where XXXX is the team number",
      "in": "path",
      "type": "string",
      "required": true
    },
    "event_key_param": {
      "name": "event_key",
      "description": "Key identifying a single event, has format [year][event code]",
      "in": "path",
      "type": "string",
      "required": true
    },
    "match_key_param": {
      "name": "match_key",
      "description": "Key identifying a single match, has format [event key]_[match id]",
      "in": "path",
      "type": "string",
      "required": true
    },
    "year_param": {
      "name": "year",
      "description": "A specific year to request data for.",
      "in": "path",
      "type": "integer",
      "required": true
    }
  },
  "responses": {
    "district_list_response": {
      "description": "A list of District objects",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/District"
        }
      }
    },
    "district_rankings_response": {
      "description": "A list of DistrictRanking objects",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/DistrictRanking"
        }
      }
    },
    "event_list_response": {
      "description": "A list of Event objects",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "team_list_response": {
      "description": "A list of Team objects",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Team"
        }
      }
    },
    "match_list_response": {
      "description": "A list of Match objects",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Match"
        }
      }
    },
    "award_list_response": {
      "description": "A list of Award objects",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Award"
        }
      }
    },
    "team_at_event_status_response": {
      "schema": {
        "$ref": "#/definitions/TeamAtEventStatus"
      }
    }
  },
  "definitions": {
    "Team": {
      "type": "object",
      "required": [
        "key",
        "name",
        "team_number"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "TBA team key with the format frcyyyy"
        },
        "name": {
          "type": "string",
          "description": "Official long name registerd with FIRST"
        },
        "nickname": {
          "type": "string",
          "description": "Team nickname provided by FIRST"
        },
        "website": {
          "type": "string",
          "description": "Official website associatd with the team"
        },
        "address": {
          "type": "string",
          "description": "Street address for this team"
        },
        "gmaps_url": {
          "type": "string",
          "description": "URL for this team on Google Maps"
        },
        "location_name": {
          "type": "string",
          "description": "Name of where this team is based"
        },
        "team_number": {
          "type": "integer",
          "description": "Official team number issued by FIRST"
        },
        "rookie_year": {
          "type": "integer",
          "description": "First year the team officially competed"
        },
        "motto": {
          "type": "string",
          "description": "Team's motto as provided by FIRST"
        }
      }
    },
    "Event": {
      "type": "object",
      "required": [
        "key",
        "name",
        "event_code",
        "year"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "TBA event key with the format yyyy[EVENT_CODE], where yyyy is the year, and EVENT_CODE is the event code of the event."
        },
        "name": {
          "type": "string",
          "description": "Official name of event on record either provided by FIRST or organizers of offseason event."
        },
        "short_name": {
          "type": "string",
          "description": "Same as name but doesn't include event specifiers, such as 'Regional' or 'District'. May be null."
        },
        "event_code": {
          "type": "string",
          "description": "Event short code, as provided by FIRST"
        },
        "event_type_string": {
          "type": "string",
          "description": "A human readable string that defines the event type."
        },
        "event_type": {
          "type": "integer",
          "description": "An integer that represents the event type as a constant."
        },
        "district": {
            "$ref": "#/definitions/District"
        },
        "year": {
          "type": "integer",
          "description": "Year the event data is for."
        },
        "address": {
          "type": "string",
          "description": "Address of the event venue"
        },
        "gmaps_url": {
          "type": "string",
          "description": "URL for the venue on Google Maps"
        },
        "location_name": {
          "type": "string",
          "description": "Short name of the venue"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone name"
        },
        "website": {
          "type": "string",
          "description": "The event's website, if any."
        },
        "webcasts": {
          "type": "string",
          "description": "If the event has webcast data associated with it, this contains JSON data of the streams"
        },
        "week": {
          "type": "integer",
          "description": "Week of the season the event occurs on"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "When the event starts"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "When the event ends"
        }
      }
    },
    "MatchAlliance": {
      "type": "object",
      "required": [
        "score",
        "team_keys"
      ],
      "properties": {
        "score": {
          "type": "integer"
        },
        "team_keys": {
            "type": "array",
            "items": {"type": "string"}
        },
        "surrogate_team_keys": {
            "type": "array",
            "items": {"type": "string"}
        }
      }
    },
    "Match": {
      "type": "object",
      "required": [
        "key",
        "event_key",
        "comp_level",
        "match_number",
        "set_number"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "TBA event key with the format yyyy[EVENT_CODE]_[COMP_LEVEL]m[MATCH_NUMBER], where yyyy is the year, and EVENT_CODE is the event code of the event, COMP_LEVEL is (qm, ef, qf, sf, f), and MATCH_NUMBER is the match number in the competition level. A set number may append the competition level if more than one match in required per set ."
        },
        "comp_level": {
          "type": "string",
          "description": "The competition level the match was played at."
        },
        "set_number": {
          "type": "integer",
          "description": "The set number in a series of matches where more than one match is required in the match series."
        },
        "match_number": {
          "type": "integer",
          "description": "The match number of the match in the competition level."
        },
        "alliances": {
          "type": "object",
          "title": "MatchAlliancesContainer",
          "required": [
            "red",
            "blue"
          ],
          "properties": {
            "red": {
              "$ref": "#/definitions/MatchAlliance"
            },
            "blue": {
              "$ref": "#/definitions/MatchAlliance"
            }
          }
        },
        "score_breakdown": {
          "type": "string",
          "description": "Score breakdown for auto, teleop, etc. points. Varies from year to year. May be null."
        },
        "event_key": {
          "type": "string",
          "description": "Event key of the event the match was played at."
        },
        "videos": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "MatchVideo",
            "required": [
              "type",
              "key"
            ],
            "properties": {
              "type": {
                "type": "string"
              },
              "key": {
                "type": "string"
              }
            }
          }
        },
        "time": {
          "type": "integer",
          "format": "int64",
          "description": "UNIX timestamp of match time, as taken from the published schedule"
        },
        "actual_time": {
          "type": "integer",
          "format": "int64",
          "description": "UNIX timestamp of when the match actually started"
        },
        "winning_alliance": {
          "type": "string",
          "description": "Which alliance won"
        }
      }
    },
    "Award": {
      "type": "object",
      "required": [
        "name",
        "award_type",
        "event_key",
        "year"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the award as provided by FIRST. May vary for the same award type."
        },
        "award_type": {
          "type": "integer",
          "description": "An integer that represents the award type as a constant."
        },
        "event_key": {
          "type": "string",
          "description": "The event_key of the event the award was won at."
        },
        "recipient_list": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "AwardRecipient",
            "properties": {
              "awardee": {
                "type": "string",
                "description": "Name of the winning person"
              },
              "team_key": {
                "type": "string",
                "description": "Key of the winning team"
              }
            }
          }
        },
        "year": {
          "type": "integer",
          "description": "The year this award was won."
        }
      }
    },
    "Media": {
      "type": "object",
      "required": [
        "type",
        "foreign_key",
        "preferred"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The string type of the media element"
        },
        "foreign_key": {
          "type": "string",
          "description": "The key used to indentify this media element on the remote site (e.g YouTube video key)"
        },
        "details": {
          "type": "string",
          "description": "If the media requires it, a json dict of additional information"
        },
        "preferred": {
          "type": "boolean",
          "description": "Is this a high quality robot picture"
        }
      }
    },
    "Robot": {
      "type": "object",
      "required": [
        "key",
        "team_key",
        "year",
        "name"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "A key identifying the robot object. Formed like [team_key]_[year]"
        },
        "team_key": {
          "type": "string",
          "description": "The associated Team key"
        },
        "year": {
          "type": "integer",
          "description": "The year this Robot model referes to"
        },
        "name": {
          "type": "string",
          "description": "The robot name in this year"
        }
      }
    },
    "District": {
        "type": "object",
        "required": [
            "display_name",
            "abbreviation",
            "key",
            "year"
        ],
        "properties": {
            "abbreviation": {
                "type": "string",
                "description": "The short identifier for the district"
            },
            "display_name": {
                "type": "string",
                "description": "The long name for the district"
            },
            "key": {
              "type": "string",
              "description": "Key for this district, e.g. 2016ne"
            },
            "year": {
              "type": "integer",
              "description": "Year this district happened"
            }
        }
    },
    "DistrictRanking": {
        "type": "object",
        "required": [
          "event_points",
          "point_total",
          "rank",
          "rookie_bonus",
          "team_key"
        ],
        "properties": {
          "event_points": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "DistrictEventPoints",
              "required": [
                "alliance_points",
                "award_points",
                "district_cmp",
                "elim_points",
                "event_key",
                "qual_points",
                "total"
              ],
              "properties": {
                "alliance_points": {
                  "type": "integer",
                  "description": "Number of points from alliance selection"
                },
                "award_points": {
                  "type": "integer",
                  "description": "Number of points from awards"
                },
                "district_cmp": {
                  "type": "boolean",
                  "description": "Does this event get the District CMP multiplier?"
                },
                "elim_points": {
                  "type": "integer",
                  "description": "Number of points from playoff matches"
                },
                "event_key": {
                  "type": "string",
                  "description": "Event where these points were earned"
                },
                "qual_points": {
                  "type": "integer",
                  "description": "Number of points from qualification matches"
                },
                "total": {
                  "type": "integer",
                  "description": "Total number of points from this event"
                }
              }
            }
          },
          "point_total": {
            "type": "integer",
            "description": "Number of points earned, in total"
          },
          "rank": {
            "type": "integer",
            "description": "Ranking of this team in the district"
          },
          "rookie_bonus": {
            "type": "integer",
            "description": "Extra points based on begin a first or second year team"
          },
          "team_key": {
            "type": "string",
            "description": "Team these rankings are for"
          }
        }
    },
    "EventAlliance": {
      "type": "object",
      "required": [
        "picks"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this alliance that can be displayed"
        },
        "picks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "declines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "backup": {
          "$ref": "#/definitions/AllianceBackup"
        },
        "status": {
          "$ref": "#/definitions/TeamAtEventPlayoff"
        }
      }
    },
    "AllianceBackup": {
      "type": "object",
      "required": [
        "in",
        "out"
      ],
      "properties": {
        "in": {
          "type": "string",
          "description": "Team key of incoming team"
        },
        "out": {
          "type": "string",
          "description": "Team key of outgoing team"
        }
      }
    },
    "TeamRecord": {
      "type": "object",
      "required": [
        "wins",
        "losses",
        "ties"
      ],
      "properties": {
        "wins": {
          "type": "integer",
          "description": "Number of wins"
        },
        "losses": {
          "type": "integer",
          "description": "Number of losses"
        },
        "ties": {
          "type": "integer",
          "description": "Number of ties"
        }
      }
    },
    "RankingItem": {
      "type": "object",
      "required": [
        "dq",
        "matches_played",
        "rank",
        "record",
        "sort_orders",
        "team_key"
      ],
      "properties": {
        "dq": {
          "type": "integer",
          "description": "Number of times the team was disqualified from a match"
        },
        "matches_played": {
          "type": "integer",
          "description": "Number of matches this team has played"
        },
        "qual_average": {
          "type": "number",
          "format": "double",
          "description": "For some years, average qualification score"
        },
        "rank": {
          "type": "integer",
          "description": "Ranking of this team"
        },
        "record": {
          "$ref": "#/definitions/TeamRecord"
        },
        "sort_orders": {
          "type": "array",
          "description": "Year-specific ranking values",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "team_key": {
          "type": "string",
          "description": "Team this item is for"
        }
      }
    },
    "RankingSortOrder": {
      "type": "object",
      "required": [
        "name",
        "precision"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Description of this ranking column"
        },
        "precision": {
          "type": "integer",
          "description": "How many significant figures to display"
        }
      }
    },
    "RankingResponseObject": {
      "type": "object",
      "required": [
        "rankings",
        "sort_order_info"
      ],
      "properties": {
        "rankings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RankingItem"
          }
        },
        "sort_order_info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RankingSortOrder"
          }
        }
      }
    },
    "TeamAtEventPlayoff": {
      "type": "object",
      "required": [
        "level",
        "status"
      ],
      "properties": {
        "current_level_record": {
          "$ref": "#/definitions/TeamRecord"
        },
        "level": {
          "type": "string"
        },
        "playoff_average": {
          "type": "number",
          "format": "double"
        },
        "record": {
            "$ref": "#/definitions/TeamRecord"
        },
        "status": {
            "type": "string"
        }
      }
    },
    "TeamAtEventStatus": {
      "type": "object",
      "required": [
        "alliance_status_str",
        "overall_status_str",
        "playoff_status_str"
      ],
      "properties": {
        "alliance": {
          "type": "object",
          "title": "TeamAtEventAlliance",
          "required": [
            "name",
            "number",
            "pick"
          ],
          "properties": {
            "backup": {
              "$ref": "#/definitions/AllianceBackup"
            },
            "name": {
              "type": "string"
            },
            "number": {
              "type": "integer"
            },
            "pick": {
              "type": "integer"
            }
          }
        },
        "alliance_status_str": {
          "type": "string"
        },
        "overall_status_str": {
          "type": "string"
        },
        "playoff": {
          "$ref": "#/definitions/TeamAtEventPlayoff"
        },
        "qual": {
          "type": "object",
          "title": "TeamAtEventQual",
          "required": [
            "ranking",
            "sort_order_info",
            "num_teams",
            "status"
          ],
          "properties": {
            "ranking": {
              "$ref": "#/definitions/RankingItem"
            },
            "sort_order_info": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RankingSortOrder"
              }
            },
            "num_teams": {
              "type": "integer"
            },
            "status": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
