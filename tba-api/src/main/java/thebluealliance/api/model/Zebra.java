/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package thebluealliance.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import thebluealliance.api.model.ZebraAlliances;

/**
 * Zebra
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-12T10:04:04.013721-06:00[America/Chicago]", comments = "Generator version: 7.10.0")
public class Zebra {
  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  @javax.annotation.Nonnull
  private String key;

  public static final String SERIALIZED_NAME_TIMES = "times";
  @SerializedName(SERIALIZED_NAME_TIMES)
  @javax.annotation.Nonnull
  private List<Double> times = new ArrayList<>();

  public static final String SERIALIZED_NAME_ALLIANCES = "alliances";
  @SerializedName(SERIALIZED_NAME_ALLIANCES)
  @javax.annotation.Nonnull
  private ZebraAlliances alliances;

  public Zebra() {
  }

  public Zebra key(@javax.annotation.Nonnull String key) {
    
    this.key = key;
    return this;
  }

  /**
   * TBA match key with the format &#x60;yyyy[EVENT_CODE]_[COMP_LEVEL]m[MATCH_NUMBER]&#x60;, where &#x60;yyyy&#x60; is the year, and &#x60;EVENT_CODE&#x60; is the event code of the event, &#x60;COMP_LEVEL&#x60; is (qm, ef, qf, sf, f), and &#x60;MATCH_NUMBER&#x60; is the match number in the competition level. A set number may be appended to the competition level if more than one match in required per set.
   * @return key
   */
  @javax.annotation.Nonnull

  public String getKey() {
    return key;
  }


  public void setKey(@javax.annotation.Nonnull String key) {
    this.key = key;
  }

  public Zebra times(@javax.annotation.Nonnull List<Double> times) {
    
    this.times = times;
    return this;
  }

  public Zebra addTimesItem(Double timesItem) {
    if (this.times == null) {
      this.times = new ArrayList<>();
    }
    this.times.add(timesItem);
    return this;
  }

  /**
   * A list of relative timestamps for each data point. Each timestamp will correspond to the X and Y value at the same index in a team xs and ys arrays. &#x60;times&#x60;, all teams &#x60;xs&#x60; and all teams &#x60;ys&#x60; are guarenteed to be the same length.
   * @return times
   */
  @javax.annotation.Nonnull

  public List<Double> getTimes() {
    return times;
  }


  public void setTimes(@javax.annotation.Nonnull List<Double> times) {
    this.times = times;
  }

  public Zebra alliances(@javax.annotation.Nonnull ZebraAlliances alliances) {
    
    this.alliances = alliances;
    return this;
  }

  /**
   * Get alliances
   * @return alliances
   */
  @javax.annotation.Nonnull

  public ZebraAlliances getAlliances() {
    return alliances;
  }


  public void setAlliances(@javax.annotation.Nonnull ZebraAlliances alliances) {
    this.alliances = alliances;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Zebra zebra = (Zebra) o;
    return Objects.equals(this.key, zebra.key) &&
        Objects.equals(this.times, zebra.times) &&
        Objects.equals(this.alliances, zebra.alliances);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, times, alliances);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Zebra {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    times: ").append(toIndentedString(times)).append("\n");
    sb.append("    alliances: ").append(toIndentedString(alliances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

