/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package thebluealliance.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Information about how a regional team qualified for FIRST Championship.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-19T09:18:44.421555100-05:00[America/Chicago]", comments = "Generator version: 7.13.0")
public class RegionalAdvancement {
  public static final String SERIALIZED_NAME_CMP = "cmp";
  @SerializedName(SERIALIZED_NAME_CMP)
  @javax.annotation.Nonnull
  private Boolean cmp;

  /**
   * Gets or Sets cmpStatus
   */
  @JsonAdapter(CmpStatusEnum.Adapter.class)
  public enum CmpStatusEnum {
    NOT_INVITED(String.valueOf("NotInvited")),
    
    PRE_QUALIFIED(String.valueOf("PreQualified")),
    
    EVENT_QUALIFIED(String.valueOf("EventQualified")),
    
    POOL_QUALIFIED(String.valueOf("PoolQualified")),
    
    DECLINED(String.valueOf("Declined"));

    private String value;

    CmpStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CmpStatusEnum fromValue(String value) {
      for (CmpStatusEnum b : CmpStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CmpStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CmpStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CmpStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CmpStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CMP_STATUS = "cmp_status";
  @SerializedName(SERIALIZED_NAME_CMP_STATUS)
  @javax.annotation.Nonnull
  private CmpStatusEnum cmpStatus;

  public static final String SERIALIZED_NAME_QUALIFYING_EVENT = "qualifying_event";
  @SerializedName(SERIALIZED_NAME_QUALIFYING_EVENT)
  @javax.annotation.Nullable
  private String qualifyingEvent;

  public static final String SERIALIZED_NAME_QUALIFYING_AWARD_NAME = "qualifying_award_name";
  @SerializedName(SERIALIZED_NAME_QUALIFYING_AWARD_NAME)
  @javax.annotation.Nullable
  private String qualifyingAwardName;

  public static final String SERIALIZED_NAME_QUALIFYING_POOL_WEEK = "qualifying_pool_week";
  @SerializedName(SERIALIZED_NAME_QUALIFYING_POOL_WEEK)
  @javax.annotation.Nullable
  private Integer qualifyingPoolWeek;

  public RegionalAdvancement() {
  }

  public RegionalAdvancement cmp(@javax.annotation.Nonnull Boolean cmp) {
    
    this.cmp = cmp;
    return this;
  }

  /**
   * Whether or not the team qualified for Championship.
   * @return cmp
   */
  @javax.annotation.Nonnull

  public Boolean getCmp() {
    return cmp;
  }


  public void setCmp(@javax.annotation.Nonnull Boolean cmp) {
    this.cmp = cmp;
  }

  public RegionalAdvancement cmpStatus(@javax.annotation.Nonnull CmpStatusEnum cmpStatus) {
    
    this.cmpStatus = cmpStatus;
    return this;
  }

  /**
   * Get cmpStatus
   * @return cmpStatus
   */
  @javax.annotation.Nonnull

  public CmpStatusEnum getCmpStatus() {
    return cmpStatus;
  }


  public void setCmpStatus(@javax.annotation.Nonnull CmpStatusEnum cmpStatus) {
    this.cmpStatus = cmpStatus;
  }

  public RegionalAdvancement qualifyingEvent(@javax.annotation.Nullable String qualifyingEvent) {
    
    this.qualifyingEvent = qualifyingEvent;
    return this;
  }

  /**
   * The event key at which the team qualified
   * @return qualifyingEvent
   */
  @javax.annotation.Nullable

  public String getQualifyingEvent() {
    return qualifyingEvent;
  }


  public void setQualifyingEvent(@javax.annotation.Nullable String qualifyingEvent) {
    this.qualifyingEvent = qualifyingEvent;
  }

  public RegionalAdvancement qualifyingAwardName(@javax.annotation.Nullable String qualifyingAwardName) {
    
    this.qualifyingAwardName = qualifyingAwardName;
    return this;
  }

  /**
   * The name of the award which qualified the team
   * @return qualifyingAwardName
   */
  @javax.annotation.Nullable

  public String getQualifyingAwardName() {
    return qualifyingAwardName;
  }


  public void setQualifyingAwardName(@javax.annotation.Nullable String qualifyingAwardName) {
    this.qualifyingAwardName = qualifyingAwardName;
  }

  public RegionalAdvancement qualifyingPoolWeek(@javax.annotation.Nullable Integer qualifyingPoolWeek) {
    
    this.qualifyingPoolWeek = qualifyingPoolWeek;
    return this;
  }

  /**
   * Which week number&#39;s regional pool invitation the team got
   * @return qualifyingPoolWeek
   */
  @javax.annotation.Nullable

  public Integer getQualifyingPoolWeek() {
    return qualifyingPoolWeek;
  }


  public void setQualifyingPoolWeek(@javax.annotation.Nullable Integer qualifyingPoolWeek) {
    this.qualifyingPoolWeek = qualifyingPoolWeek;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegionalAdvancement regionalAdvancement = (RegionalAdvancement) o;
    return Objects.equals(this.cmp, regionalAdvancement.cmp) &&
        Objects.equals(this.cmpStatus, regionalAdvancement.cmpStatus) &&
        Objects.equals(this.qualifyingEvent, regionalAdvancement.qualifyingEvent) &&
        Objects.equals(this.qualifyingAwardName, regionalAdvancement.qualifyingAwardName) &&
        Objects.equals(this.qualifyingPoolWeek, regionalAdvancement.qualifyingPoolWeek);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cmp, cmpStatus, qualifyingEvent, qualifyingAwardName, qualifyingPoolWeek);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegionalAdvancement {\n");
    sb.append("    cmp: ").append(toIndentedString(cmp)).append("\n");
    sb.append("    cmpStatus: ").append(toIndentedString(cmpStatus)).append("\n");
    sb.append("    qualifyingEvent: ").append(toIndentedString(qualifyingEvent)).append("\n");
    sb.append("    qualifyingAwardName: ").append(toIndentedString(qualifyingAwardName)).append("\n");
    sb.append("    qualifyingPoolWeek: ").append(toIndentedString(qualifyingPoolWeek)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

