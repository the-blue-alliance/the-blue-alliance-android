/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package thebluealliance.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * Insights for FIRST Power Up qualification and elimination matches.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-12T10:04:04.013721-06:00[America/Chicago]", comments = "Generator version: 7.10.0")
public class EventInsights2018 {
  public static final String SERIALIZED_NAME_AUTO_QUEST_ACHIEVED = "auto_quest_achieved";
  @SerializedName(SERIALIZED_NAME_AUTO_QUEST_ACHIEVED)
  @javax.annotation.Nonnull
  private List<Float> autoQuestAchieved = new ArrayList<>();

  public static final String SERIALIZED_NAME_AVERAGE_BOOST_PLAYED = "average_boost_played";
  @SerializedName(SERIALIZED_NAME_AVERAGE_BOOST_PLAYED)
  @javax.annotation.Nonnull
  private Float averageBoostPlayed;

  public static final String SERIALIZED_NAME_AVERAGE_ENDGAME_POINTS = "average_endgame_points";
  @SerializedName(SERIALIZED_NAME_AVERAGE_ENDGAME_POINTS)
  @javax.annotation.Nonnull
  private Float averageEndgamePoints;

  public static final String SERIALIZED_NAME_AVERAGE_FORCE_PLAYED = "average_force_played";
  @SerializedName(SERIALIZED_NAME_AVERAGE_FORCE_PLAYED)
  @javax.annotation.Nonnull
  private Float averageForcePlayed;

  public static final String SERIALIZED_NAME_AVERAGE_FOUL_SCORE = "average_foul_score";
  @SerializedName(SERIALIZED_NAME_AVERAGE_FOUL_SCORE)
  @javax.annotation.Nonnull
  private Float averageFoulScore;

  public static final String SERIALIZED_NAME_AVERAGE_POINTS_AUTO = "average_points_auto";
  @SerializedName(SERIALIZED_NAME_AVERAGE_POINTS_AUTO)
  @javax.annotation.Nonnull
  private Float averagePointsAuto;

  public static final String SERIALIZED_NAME_AVERAGE_POINTS_TELEOP = "average_points_teleop";
  @SerializedName(SERIALIZED_NAME_AVERAGE_POINTS_TELEOP)
  @javax.annotation.Nonnull
  private Float averagePointsTeleop;

  public static final String SERIALIZED_NAME_AVERAGE_RUN_POINTS_AUTO = "average_run_points_auto";
  @SerializedName(SERIALIZED_NAME_AVERAGE_RUN_POINTS_AUTO)
  @javax.annotation.Nonnull
  private Float averageRunPointsAuto;

  public static final String SERIALIZED_NAME_AVERAGE_SCALE_OWNERSHIP_POINTS = "average_scale_ownership_points";
  @SerializedName(SERIALIZED_NAME_AVERAGE_SCALE_OWNERSHIP_POINTS)
  @javax.annotation.Nonnull
  private Float averageScaleOwnershipPoints;

  public static final String SERIALIZED_NAME_AVERAGE_SCALE_OWNERSHIP_POINTS_AUTO = "average_scale_ownership_points_auto";
  @SerializedName(SERIALIZED_NAME_AVERAGE_SCALE_OWNERSHIP_POINTS_AUTO)
  @javax.annotation.Nonnull
  private Float averageScaleOwnershipPointsAuto;

  public static final String SERIALIZED_NAME_AVERAGE_SCALE_OWNERSHIP_POINTS_TELEOP = "average_scale_ownership_points_teleop";
  @SerializedName(SERIALIZED_NAME_AVERAGE_SCALE_OWNERSHIP_POINTS_TELEOP)
  @javax.annotation.Nonnull
  private Float averageScaleOwnershipPointsTeleop;

  public static final String SERIALIZED_NAME_AVERAGE_SCORE = "average_score";
  @SerializedName(SERIALIZED_NAME_AVERAGE_SCORE)
  @javax.annotation.Nonnull
  private Float averageScore;

  public static final String SERIALIZED_NAME_AVERAGE_SWITCH_OWNERSHIP_POINTS = "average_switch_ownership_points";
  @SerializedName(SERIALIZED_NAME_AVERAGE_SWITCH_OWNERSHIP_POINTS)
  @javax.annotation.Nonnull
  private Float averageSwitchOwnershipPoints;

  public static final String SERIALIZED_NAME_AVERAGE_SWITCH_OWNERSHIP_POINTS_AUTO = "average_switch_ownership_points_auto";
  @SerializedName(SERIALIZED_NAME_AVERAGE_SWITCH_OWNERSHIP_POINTS_AUTO)
  @javax.annotation.Nonnull
  private Float averageSwitchOwnershipPointsAuto;

  public static final String SERIALIZED_NAME_AVERAGE_SWITCH_OWNERSHIP_POINTS_TELEOP = "average_switch_ownership_points_teleop";
  @SerializedName(SERIALIZED_NAME_AVERAGE_SWITCH_OWNERSHIP_POINTS_TELEOP)
  @javax.annotation.Nonnull
  private Float averageSwitchOwnershipPointsTeleop;

  public static final String SERIALIZED_NAME_AVERAGE_VAULT_POINTS = "average_vault_points";
  @SerializedName(SERIALIZED_NAME_AVERAGE_VAULT_POINTS)
  @javax.annotation.Nonnull
  private Float averageVaultPoints;

  public static final String SERIALIZED_NAME_AVERAGE_WIN_MARGIN = "average_win_margin";
  @SerializedName(SERIALIZED_NAME_AVERAGE_WIN_MARGIN)
  @javax.annotation.Nonnull
  private Float averageWinMargin;

  public static final String SERIALIZED_NAME_AVERAGE_WIN_SCORE = "average_win_score";
  @SerializedName(SERIALIZED_NAME_AVERAGE_WIN_SCORE)
  @javax.annotation.Nonnull
  private Float averageWinScore;

  public static final String SERIALIZED_NAME_BOOST_PLAYED_COUNTS = "boost_played_counts";
  @SerializedName(SERIALIZED_NAME_BOOST_PLAYED_COUNTS)
  @javax.annotation.Nonnull
  private List<Float> boostPlayedCounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIMB_COUNTS = "climb_counts";
  @SerializedName(SERIALIZED_NAME_CLIMB_COUNTS)
  @javax.annotation.Nonnull
  private List<Float> climbCounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_FACE_THE_BOSS_ACHIEVED = "face_the_boss_achieved";
  @SerializedName(SERIALIZED_NAME_FACE_THE_BOSS_ACHIEVED)
  @javax.annotation.Nonnull
  private List<Float> faceTheBossAchieved = new ArrayList<>();

  public static final String SERIALIZED_NAME_FORCE_PLAYED_COUNTS = "force_played_counts";
  @SerializedName(SERIALIZED_NAME_FORCE_PLAYED_COUNTS)
  @javax.annotation.Nonnull
  private List<Float> forcePlayedCounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_HIGH_SCORE = "high_score";
  @SerializedName(SERIALIZED_NAME_HIGH_SCORE)
  @javax.annotation.Nonnull
  private List<String> highScore = new ArrayList<>();

  public static final String SERIALIZED_NAME_LEVITATE_PLAYED_COUNTS = "levitate_played_counts";
  @SerializedName(SERIALIZED_NAME_LEVITATE_PLAYED_COUNTS)
  @javax.annotation.Nonnull
  private List<Float> levitatePlayedCounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_RUN_COUNTS_AUTO = "run_counts_auto";
  @SerializedName(SERIALIZED_NAME_RUN_COUNTS_AUTO)
  @javax.annotation.Nonnull
  private List<Float> runCountsAuto = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCALE_NEUTRAL_PERCENTAGE = "scale_neutral_percentage";
  @SerializedName(SERIALIZED_NAME_SCALE_NEUTRAL_PERCENTAGE)
  @javax.annotation.Nonnull
  private Float scaleNeutralPercentage;

  public static final String SERIALIZED_NAME_SCALE_NEUTRAL_PERCENTAGE_AUTO = "scale_neutral_percentage_auto";
  @SerializedName(SERIALIZED_NAME_SCALE_NEUTRAL_PERCENTAGE_AUTO)
  @javax.annotation.Nonnull
  private Float scaleNeutralPercentageAuto;

  public static final String SERIALIZED_NAME_SCALE_NEUTRAL_PERCENTAGE_TELEOP = "scale_neutral_percentage_teleop";
  @SerializedName(SERIALIZED_NAME_SCALE_NEUTRAL_PERCENTAGE_TELEOP)
  @javax.annotation.Nonnull
  private Float scaleNeutralPercentageTeleop;

  public static final String SERIALIZED_NAME_SWITCH_OWNED_COUNTS_AUTO = "switch_owned_counts_auto";
  @SerializedName(SERIALIZED_NAME_SWITCH_OWNED_COUNTS_AUTO)
  @javax.annotation.Nonnull
  private List<Float> switchOwnedCountsAuto = new ArrayList<>();

  public static final String SERIALIZED_NAME_UNICORN_MATCHES = "unicorn_matches";
  @SerializedName(SERIALIZED_NAME_UNICORN_MATCHES)
  @javax.annotation.Nonnull
  private List<Float> unicornMatches = new ArrayList<>();

  public static final String SERIALIZED_NAME_WINNING_OPP_SWITCH_DENIAL_PERCENTAGE_TELEOP = "winning_opp_switch_denial_percentage_teleop";
  @SerializedName(SERIALIZED_NAME_WINNING_OPP_SWITCH_DENIAL_PERCENTAGE_TELEOP)
  @javax.annotation.Nonnull
  private Float winningOppSwitchDenialPercentageTeleop;

  public static final String SERIALIZED_NAME_WINNING_OWN_SWITCH_OWNERSHIP_PERCENTAGE = "winning_own_switch_ownership_percentage";
  @SerializedName(SERIALIZED_NAME_WINNING_OWN_SWITCH_OWNERSHIP_PERCENTAGE)
  @javax.annotation.Nonnull
  private Float winningOwnSwitchOwnershipPercentage;

  public static final String SERIALIZED_NAME_WINNING_OWN_SWITCH_OWNERSHIP_PERCENTAGE_AUTO = "winning_own_switch_ownership_percentage_auto";
  @SerializedName(SERIALIZED_NAME_WINNING_OWN_SWITCH_OWNERSHIP_PERCENTAGE_AUTO)
  @javax.annotation.Nonnull
  private Float winningOwnSwitchOwnershipPercentageAuto;

  public static final String SERIALIZED_NAME_WINNING_OWN_SWITCH_OWNERSHIP_PERCENTAGE_TELEOP = "winning_own_switch_ownership_percentage_teleop";
  @SerializedName(SERIALIZED_NAME_WINNING_OWN_SWITCH_OWNERSHIP_PERCENTAGE_TELEOP)
  @javax.annotation.Nonnull
  private Float winningOwnSwitchOwnershipPercentageTeleop;

  public static final String SERIALIZED_NAME_WINNING_SCALE_OWNERSHIP_PERCENTAGE = "winning_scale_ownership_percentage";
  @SerializedName(SERIALIZED_NAME_WINNING_SCALE_OWNERSHIP_PERCENTAGE)
  @javax.annotation.Nonnull
  private Float winningScaleOwnershipPercentage;

  public static final String SERIALIZED_NAME_WINNING_SCALE_OWNERSHIP_PERCENTAGE_AUTO = "winning_scale_ownership_percentage_auto";
  @SerializedName(SERIALIZED_NAME_WINNING_SCALE_OWNERSHIP_PERCENTAGE_AUTO)
  @javax.annotation.Nonnull
  private Float winningScaleOwnershipPercentageAuto;

  public static final String SERIALIZED_NAME_WINNING_SCALE_OWNERSHIP_PERCENTAGE_TELEOP = "winning_scale_ownership_percentage_teleop";
  @SerializedName(SERIALIZED_NAME_WINNING_SCALE_OWNERSHIP_PERCENTAGE_TELEOP)
  @javax.annotation.Nonnull
  private Float winningScaleOwnershipPercentageTeleop;

  public EventInsights2018() {
  }

  public EventInsights2018 autoQuestAchieved(@javax.annotation.Nonnull List<Float> autoQuestAchieved) {
    
    this.autoQuestAchieved = autoQuestAchieved;
    return this;
  }

  public EventInsights2018 addAutoQuestAchievedItem(Float autoQuestAchievedItem) {
    if (this.autoQuestAchieved == null) {
      this.autoQuestAchieved = new ArrayList<>();
    }
    this.autoQuestAchieved.add(autoQuestAchievedItem);
    return this;
  }

  /**
   * An array with three values, number of times auto quest was completed, number of opportunities to complete the auto quest, and percentage.
   * @return autoQuestAchieved
   */
  @javax.annotation.Nonnull

  public List<Float> getAutoQuestAchieved() {
    return autoQuestAchieved;
  }


  public void setAutoQuestAchieved(@javax.annotation.Nonnull List<Float> autoQuestAchieved) {
    this.autoQuestAchieved = autoQuestAchieved;
  }

  public EventInsights2018 averageBoostPlayed(@javax.annotation.Nonnull Float averageBoostPlayed) {
    
    this.averageBoostPlayed = averageBoostPlayed;
    return this;
  }

  /**
   * Average number of boost power up scored (out of 3).
   * @return averageBoostPlayed
   */
  @javax.annotation.Nonnull

  public Float getAverageBoostPlayed() {
    return averageBoostPlayed;
  }


  public void setAverageBoostPlayed(@javax.annotation.Nonnull Float averageBoostPlayed) {
    this.averageBoostPlayed = averageBoostPlayed;
  }

  public EventInsights2018 averageEndgamePoints(@javax.annotation.Nonnull Float averageEndgamePoints) {
    
    this.averageEndgamePoints = averageEndgamePoints;
    return this;
  }

  /**
   * Average endgame points.
   * @return averageEndgamePoints
   */
  @javax.annotation.Nonnull

  public Float getAverageEndgamePoints() {
    return averageEndgamePoints;
  }


  public void setAverageEndgamePoints(@javax.annotation.Nonnull Float averageEndgamePoints) {
    this.averageEndgamePoints = averageEndgamePoints;
  }

  public EventInsights2018 averageForcePlayed(@javax.annotation.Nonnull Float averageForcePlayed) {
    
    this.averageForcePlayed = averageForcePlayed;
    return this;
  }

  /**
   * Average number of force power up scored (out of 3).
   * @return averageForcePlayed
   */
  @javax.annotation.Nonnull

  public Float getAverageForcePlayed() {
    return averageForcePlayed;
  }


  public void setAverageForcePlayed(@javax.annotation.Nonnull Float averageForcePlayed) {
    this.averageForcePlayed = averageForcePlayed;
  }

  public EventInsights2018 averageFoulScore(@javax.annotation.Nonnull Float averageFoulScore) {
    
    this.averageFoulScore = averageFoulScore;
    return this;
  }

  /**
   * Average foul score.
   * @return averageFoulScore
   */
  @javax.annotation.Nonnull

  public Float getAverageFoulScore() {
    return averageFoulScore;
  }


  public void setAverageFoulScore(@javax.annotation.Nonnull Float averageFoulScore) {
    this.averageFoulScore = averageFoulScore;
  }

  public EventInsights2018 averagePointsAuto(@javax.annotation.Nonnull Float averagePointsAuto) {
    
    this.averagePointsAuto = averagePointsAuto;
    return this;
  }

  /**
   * Average points scored during auto.
   * @return averagePointsAuto
   */
  @javax.annotation.Nonnull

  public Float getAveragePointsAuto() {
    return averagePointsAuto;
  }


  public void setAveragePointsAuto(@javax.annotation.Nonnull Float averagePointsAuto) {
    this.averagePointsAuto = averagePointsAuto;
  }

  public EventInsights2018 averagePointsTeleop(@javax.annotation.Nonnull Float averagePointsTeleop) {
    
    this.averagePointsTeleop = averagePointsTeleop;
    return this;
  }

  /**
   * Average points scored during teleop.
   * @return averagePointsTeleop
   */
  @javax.annotation.Nonnull

  public Float getAveragePointsTeleop() {
    return averagePointsTeleop;
  }


  public void setAveragePointsTeleop(@javax.annotation.Nonnull Float averagePointsTeleop) {
    this.averagePointsTeleop = averagePointsTeleop;
  }

  public EventInsights2018 averageRunPointsAuto(@javax.annotation.Nonnull Float averageRunPointsAuto) {
    
    this.averageRunPointsAuto = averageRunPointsAuto;
    return this;
  }

  /**
   * Average mobility points scored during auto.
   * @return averageRunPointsAuto
   */
  @javax.annotation.Nonnull

  public Float getAverageRunPointsAuto() {
    return averageRunPointsAuto;
  }


  public void setAverageRunPointsAuto(@javax.annotation.Nonnull Float averageRunPointsAuto) {
    this.averageRunPointsAuto = averageRunPointsAuto;
  }

  public EventInsights2018 averageScaleOwnershipPoints(@javax.annotation.Nonnull Float averageScaleOwnershipPoints) {
    
    this.averageScaleOwnershipPoints = averageScaleOwnershipPoints;
    return this;
  }

  /**
   * Average scale ownership points scored.
   * @return averageScaleOwnershipPoints
   */
  @javax.annotation.Nonnull

  public Float getAverageScaleOwnershipPoints() {
    return averageScaleOwnershipPoints;
  }


  public void setAverageScaleOwnershipPoints(@javax.annotation.Nonnull Float averageScaleOwnershipPoints) {
    this.averageScaleOwnershipPoints = averageScaleOwnershipPoints;
  }

  public EventInsights2018 averageScaleOwnershipPointsAuto(@javax.annotation.Nonnull Float averageScaleOwnershipPointsAuto) {
    
    this.averageScaleOwnershipPointsAuto = averageScaleOwnershipPointsAuto;
    return this;
  }

  /**
   * Average scale ownership points scored during auto.
   * @return averageScaleOwnershipPointsAuto
   */
  @javax.annotation.Nonnull

  public Float getAverageScaleOwnershipPointsAuto() {
    return averageScaleOwnershipPointsAuto;
  }


  public void setAverageScaleOwnershipPointsAuto(@javax.annotation.Nonnull Float averageScaleOwnershipPointsAuto) {
    this.averageScaleOwnershipPointsAuto = averageScaleOwnershipPointsAuto;
  }

  public EventInsights2018 averageScaleOwnershipPointsTeleop(@javax.annotation.Nonnull Float averageScaleOwnershipPointsTeleop) {
    
    this.averageScaleOwnershipPointsTeleop = averageScaleOwnershipPointsTeleop;
    return this;
  }

  /**
   * Average scale ownership points scored during teleop.
   * @return averageScaleOwnershipPointsTeleop
   */
  @javax.annotation.Nonnull

  public Float getAverageScaleOwnershipPointsTeleop() {
    return averageScaleOwnershipPointsTeleop;
  }


  public void setAverageScaleOwnershipPointsTeleop(@javax.annotation.Nonnull Float averageScaleOwnershipPointsTeleop) {
    this.averageScaleOwnershipPointsTeleop = averageScaleOwnershipPointsTeleop;
  }

  public EventInsights2018 averageScore(@javax.annotation.Nonnull Float averageScore) {
    
    this.averageScore = averageScore;
    return this;
  }

  /**
   * Average score.
   * @return averageScore
   */
  @javax.annotation.Nonnull

  public Float getAverageScore() {
    return averageScore;
  }


  public void setAverageScore(@javax.annotation.Nonnull Float averageScore) {
    this.averageScore = averageScore;
  }

  public EventInsights2018 averageSwitchOwnershipPoints(@javax.annotation.Nonnull Float averageSwitchOwnershipPoints) {
    
    this.averageSwitchOwnershipPoints = averageSwitchOwnershipPoints;
    return this;
  }

  /**
   * Average switch ownership points scored.
   * @return averageSwitchOwnershipPoints
   */
  @javax.annotation.Nonnull

  public Float getAverageSwitchOwnershipPoints() {
    return averageSwitchOwnershipPoints;
  }


  public void setAverageSwitchOwnershipPoints(@javax.annotation.Nonnull Float averageSwitchOwnershipPoints) {
    this.averageSwitchOwnershipPoints = averageSwitchOwnershipPoints;
  }

  public EventInsights2018 averageSwitchOwnershipPointsAuto(@javax.annotation.Nonnull Float averageSwitchOwnershipPointsAuto) {
    
    this.averageSwitchOwnershipPointsAuto = averageSwitchOwnershipPointsAuto;
    return this;
  }

  /**
   * Average switch ownership points scored during auto.
   * @return averageSwitchOwnershipPointsAuto
   */
  @javax.annotation.Nonnull

  public Float getAverageSwitchOwnershipPointsAuto() {
    return averageSwitchOwnershipPointsAuto;
  }


  public void setAverageSwitchOwnershipPointsAuto(@javax.annotation.Nonnull Float averageSwitchOwnershipPointsAuto) {
    this.averageSwitchOwnershipPointsAuto = averageSwitchOwnershipPointsAuto;
  }

  public EventInsights2018 averageSwitchOwnershipPointsTeleop(@javax.annotation.Nonnull Float averageSwitchOwnershipPointsTeleop) {
    
    this.averageSwitchOwnershipPointsTeleop = averageSwitchOwnershipPointsTeleop;
    return this;
  }

  /**
   * Average switch ownership points scored during teleop.
   * @return averageSwitchOwnershipPointsTeleop
   */
  @javax.annotation.Nonnull

  public Float getAverageSwitchOwnershipPointsTeleop() {
    return averageSwitchOwnershipPointsTeleop;
  }


  public void setAverageSwitchOwnershipPointsTeleop(@javax.annotation.Nonnull Float averageSwitchOwnershipPointsTeleop) {
    this.averageSwitchOwnershipPointsTeleop = averageSwitchOwnershipPointsTeleop;
  }

  public EventInsights2018 averageVaultPoints(@javax.annotation.Nonnull Float averageVaultPoints) {
    
    this.averageVaultPoints = averageVaultPoints;
    return this;
  }

  /**
   * Average value points scored.
   * @return averageVaultPoints
   */
  @javax.annotation.Nonnull

  public Float getAverageVaultPoints() {
    return averageVaultPoints;
  }


  public void setAverageVaultPoints(@javax.annotation.Nonnull Float averageVaultPoints) {
    this.averageVaultPoints = averageVaultPoints;
  }

  public EventInsights2018 averageWinMargin(@javax.annotation.Nonnull Float averageWinMargin) {
    
    this.averageWinMargin = averageWinMargin;
    return this;
  }

  /**
   * Average margin of victory.
   * @return averageWinMargin
   */
  @javax.annotation.Nonnull

  public Float getAverageWinMargin() {
    return averageWinMargin;
  }


  public void setAverageWinMargin(@javax.annotation.Nonnull Float averageWinMargin) {
    this.averageWinMargin = averageWinMargin;
  }

  public EventInsights2018 averageWinScore(@javax.annotation.Nonnull Float averageWinScore) {
    
    this.averageWinScore = averageWinScore;
    return this;
  }

  /**
   * Average winning score.
   * @return averageWinScore
   */
  @javax.annotation.Nonnull

  public Float getAverageWinScore() {
    return averageWinScore;
  }


  public void setAverageWinScore(@javax.annotation.Nonnull Float averageWinScore) {
    this.averageWinScore = averageWinScore;
  }

  public EventInsights2018 boostPlayedCounts(@javax.annotation.Nonnull List<Float> boostPlayedCounts) {
    
    this.boostPlayedCounts = boostPlayedCounts;
    return this;
  }

  public EventInsights2018 addBoostPlayedCountsItem(Float boostPlayedCountsItem) {
    if (this.boostPlayedCounts == null) {
      this.boostPlayedCounts = new ArrayList<>();
    }
    this.boostPlayedCounts.add(boostPlayedCountsItem);
    return this;
  }

  /**
   * An array with three values, number of times a boost power up was played, number of opportunities to play a boost power up, and percentage.
   * @return boostPlayedCounts
   */
  @javax.annotation.Nonnull

  public List<Float> getBoostPlayedCounts() {
    return boostPlayedCounts;
  }


  public void setBoostPlayedCounts(@javax.annotation.Nonnull List<Float> boostPlayedCounts) {
    this.boostPlayedCounts = boostPlayedCounts;
  }

  public EventInsights2018 climbCounts(@javax.annotation.Nonnull List<Float> climbCounts) {
    
    this.climbCounts = climbCounts;
    return this;
  }

  public EventInsights2018 addClimbCountsItem(Float climbCountsItem) {
    if (this.climbCounts == null) {
      this.climbCounts = new ArrayList<>();
    }
    this.climbCounts.add(climbCountsItem);
    return this;
  }

  /**
   * An array with three values, number of times a climb occurred, number of opportunities to climb, and percentage.
   * @return climbCounts
   */
  @javax.annotation.Nonnull

  public List<Float> getClimbCounts() {
    return climbCounts;
  }


  public void setClimbCounts(@javax.annotation.Nonnull List<Float> climbCounts) {
    this.climbCounts = climbCounts;
  }

  public EventInsights2018 faceTheBossAchieved(@javax.annotation.Nonnull List<Float> faceTheBossAchieved) {
    
    this.faceTheBossAchieved = faceTheBossAchieved;
    return this;
  }

  public EventInsights2018 addFaceTheBossAchievedItem(Float faceTheBossAchievedItem) {
    if (this.faceTheBossAchieved == null) {
      this.faceTheBossAchieved = new ArrayList<>();
    }
    this.faceTheBossAchieved.add(faceTheBossAchievedItem);
    return this;
  }

  /**
   * An array with three values, number of times an alliance faced the boss, number of opportunities to face the boss, and percentage.
   * @return faceTheBossAchieved
   */
  @javax.annotation.Nonnull

  public List<Float> getFaceTheBossAchieved() {
    return faceTheBossAchieved;
  }


  public void setFaceTheBossAchieved(@javax.annotation.Nonnull List<Float> faceTheBossAchieved) {
    this.faceTheBossAchieved = faceTheBossAchieved;
  }

  public EventInsights2018 forcePlayedCounts(@javax.annotation.Nonnull List<Float> forcePlayedCounts) {
    
    this.forcePlayedCounts = forcePlayedCounts;
    return this;
  }

  public EventInsights2018 addForcePlayedCountsItem(Float forcePlayedCountsItem) {
    if (this.forcePlayedCounts == null) {
      this.forcePlayedCounts = new ArrayList<>();
    }
    this.forcePlayedCounts.add(forcePlayedCountsItem);
    return this;
  }

  /**
   * An array with three values, number of times a force power up was played, number of opportunities to play a force power up, and percentage.
   * @return forcePlayedCounts
   */
  @javax.annotation.Nonnull

  public List<Float> getForcePlayedCounts() {
    return forcePlayedCounts;
  }


  public void setForcePlayedCounts(@javax.annotation.Nonnull List<Float> forcePlayedCounts) {
    this.forcePlayedCounts = forcePlayedCounts;
  }

  public EventInsights2018 highScore(@javax.annotation.Nonnull List<String> highScore) {
    
    this.highScore = highScore;
    return this;
  }

  public EventInsights2018 addHighScoreItem(String highScoreItem) {
    if (this.highScore == null) {
      this.highScore = new ArrayList<>();
    }
    this.highScore.add(highScoreItem);
    return this;
  }

  /**
   * An array with three values, high score, match key from the match with the high score, and the name of the match
   * @return highScore
   */
  @javax.annotation.Nonnull

  public List<String> getHighScore() {
    return highScore;
  }


  public void setHighScore(@javax.annotation.Nonnull List<String> highScore) {
    this.highScore = highScore;
  }

  public EventInsights2018 levitatePlayedCounts(@javax.annotation.Nonnull List<Float> levitatePlayedCounts) {
    
    this.levitatePlayedCounts = levitatePlayedCounts;
    return this;
  }

  public EventInsights2018 addLevitatePlayedCountsItem(Float levitatePlayedCountsItem) {
    if (this.levitatePlayedCounts == null) {
      this.levitatePlayedCounts = new ArrayList<>();
    }
    this.levitatePlayedCounts.add(levitatePlayedCountsItem);
    return this;
  }

  /**
   * An array with three values, number of times a levitate power up was played, number of opportunities to play a levitate power up, and percentage.
   * @return levitatePlayedCounts
   */
  @javax.annotation.Nonnull

  public List<Float> getLevitatePlayedCounts() {
    return levitatePlayedCounts;
  }


  public void setLevitatePlayedCounts(@javax.annotation.Nonnull List<Float> levitatePlayedCounts) {
    this.levitatePlayedCounts = levitatePlayedCounts;
  }

  public EventInsights2018 runCountsAuto(@javax.annotation.Nonnull List<Float> runCountsAuto) {
    
    this.runCountsAuto = runCountsAuto;
    return this;
  }

  public EventInsights2018 addRunCountsAutoItem(Float runCountsAutoItem) {
    if (this.runCountsAuto == null) {
      this.runCountsAuto = new ArrayList<>();
    }
    this.runCountsAuto.add(runCountsAutoItem);
    return this;
  }

  /**
   * An array with three values, number of times a team scored mobility points in auto, number of opportunities to score mobility points in auto, and percentage.
   * @return runCountsAuto
   */
  @javax.annotation.Nonnull

  public List<Float> getRunCountsAuto() {
    return runCountsAuto;
  }


  public void setRunCountsAuto(@javax.annotation.Nonnull List<Float> runCountsAuto) {
    this.runCountsAuto = runCountsAuto;
  }

  public EventInsights2018 scaleNeutralPercentage(@javax.annotation.Nonnull Float scaleNeutralPercentage) {
    
    this.scaleNeutralPercentage = scaleNeutralPercentage;
    return this;
  }

  /**
   * Average scale neutral percentage.
   * @return scaleNeutralPercentage
   */
  @javax.annotation.Nonnull

  public Float getScaleNeutralPercentage() {
    return scaleNeutralPercentage;
  }


  public void setScaleNeutralPercentage(@javax.annotation.Nonnull Float scaleNeutralPercentage) {
    this.scaleNeutralPercentage = scaleNeutralPercentage;
  }

  public EventInsights2018 scaleNeutralPercentageAuto(@javax.annotation.Nonnull Float scaleNeutralPercentageAuto) {
    
    this.scaleNeutralPercentageAuto = scaleNeutralPercentageAuto;
    return this;
  }

  /**
   * Average scale neutral percentage during auto.
   * @return scaleNeutralPercentageAuto
   */
  @javax.annotation.Nonnull

  public Float getScaleNeutralPercentageAuto() {
    return scaleNeutralPercentageAuto;
  }


  public void setScaleNeutralPercentageAuto(@javax.annotation.Nonnull Float scaleNeutralPercentageAuto) {
    this.scaleNeutralPercentageAuto = scaleNeutralPercentageAuto;
  }

  public EventInsights2018 scaleNeutralPercentageTeleop(@javax.annotation.Nonnull Float scaleNeutralPercentageTeleop) {
    
    this.scaleNeutralPercentageTeleop = scaleNeutralPercentageTeleop;
    return this;
  }

  /**
   * Average scale neutral percentage during teleop.
   * @return scaleNeutralPercentageTeleop
   */
  @javax.annotation.Nonnull

  public Float getScaleNeutralPercentageTeleop() {
    return scaleNeutralPercentageTeleop;
  }


  public void setScaleNeutralPercentageTeleop(@javax.annotation.Nonnull Float scaleNeutralPercentageTeleop) {
    this.scaleNeutralPercentageTeleop = scaleNeutralPercentageTeleop;
  }

  public EventInsights2018 switchOwnedCountsAuto(@javax.annotation.Nonnull List<Float> switchOwnedCountsAuto) {
    
    this.switchOwnedCountsAuto = switchOwnedCountsAuto;
    return this;
  }

  public EventInsights2018 addSwitchOwnedCountsAutoItem(Float switchOwnedCountsAutoItem) {
    if (this.switchOwnedCountsAuto == null) {
      this.switchOwnedCountsAuto = new ArrayList<>();
    }
    this.switchOwnedCountsAuto.add(switchOwnedCountsAutoItem);
    return this;
  }

  /**
   * An array with three values, number of times a switch was owned during auto, number of opportunities to own a switch during auto, and percentage.
   * @return switchOwnedCountsAuto
   */
  @javax.annotation.Nonnull

  public List<Float> getSwitchOwnedCountsAuto() {
    return switchOwnedCountsAuto;
  }


  public void setSwitchOwnedCountsAuto(@javax.annotation.Nonnull List<Float> switchOwnedCountsAuto) {
    this.switchOwnedCountsAuto = switchOwnedCountsAuto;
  }

  public EventInsights2018 unicornMatches(@javax.annotation.Nonnull List<Float> unicornMatches) {
    
    this.unicornMatches = unicornMatches;
    return this;
  }

  public EventInsights2018 addUnicornMatchesItem(Float unicornMatchesItem) {
    if (this.unicornMatches == null) {
      this.unicornMatches = new ArrayList<>();
    }
    this.unicornMatches.add(unicornMatchesItem);
    return this;
  }

  /**
   * An array with three values, number of times a unicorn match (Win + Auto Quest + Face the Boss) occurred, number of opportunities to have a unicorn match, and percentage.
   * @return unicornMatches
   */
  @javax.annotation.Nonnull

  public List<Float> getUnicornMatches() {
    return unicornMatches;
  }


  public void setUnicornMatches(@javax.annotation.Nonnull List<Float> unicornMatches) {
    this.unicornMatches = unicornMatches;
  }

  public EventInsights2018 winningOppSwitchDenialPercentageTeleop(@javax.annotation.Nonnull Float winningOppSwitchDenialPercentageTeleop) {
    
    this.winningOppSwitchDenialPercentageTeleop = winningOppSwitchDenialPercentageTeleop;
    return this;
  }

  /**
   * Average opposing switch denail percentage for the winning alliance during teleop.
   * @return winningOppSwitchDenialPercentageTeleop
   */
  @javax.annotation.Nonnull

  public Float getWinningOppSwitchDenialPercentageTeleop() {
    return winningOppSwitchDenialPercentageTeleop;
  }


  public void setWinningOppSwitchDenialPercentageTeleop(@javax.annotation.Nonnull Float winningOppSwitchDenialPercentageTeleop) {
    this.winningOppSwitchDenialPercentageTeleop = winningOppSwitchDenialPercentageTeleop;
  }

  public EventInsights2018 winningOwnSwitchOwnershipPercentage(@javax.annotation.Nonnull Float winningOwnSwitchOwnershipPercentage) {
    
    this.winningOwnSwitchOwnershipPercentage = winningOwnSwitchOwnershipPercentage;
    return this;
  }

  /**
   * Average own switch ownership percentage for the winning alliance.
   * @return winningOwnSwitchOwnershipPercentage
   */
  @javax.annotation.Nonnull

  public Float getWinningOwnSwitchOwnershipPercentage() {
    return winningOwnSwitchOwnershipPercentage;
  }


  public void setWinningOwnSwitchOwnershipPercentage(@javax.annotation.Nonnull Float winningOwnSwitchOwnershipPercentage) {
    this.winningOwnSwitchOwnershipPercentage = winningOwnSwitchOwnershipPercentage;
  }

  public EventInsights2018 winningOwnSwitchOwnershipPercentageAuto(@javax.annotation.Nonnull Float winningOwnSwitchOwnershipPercentageAuto) {
    
    this.winningOwnSwitchOwnershipPercentageAuto = winningOwnSwitchOwnershipPercentageAuto;
    return this;
  }

  /**
   * Average own switch ownership percentage for the winning alliance during auto.
   * @return winningOwnSwitchOwnershipPercentageAuto
   */
  @javax.annotation.Nonnull

  public Float getWinningOwnSwitchOwnershipPercentageAuto() {
    return winningOwnSwitchOwnershipPercentageAuto;
  }


  public void setWinningOwnSwitchOwnershipPercentageAuto(@javax.annotation.Nonnull Float winningOwnSwitchOwnershipPercentageAuto) {
    this.winningOwnSwitchOwnershipPercentageAuto = winningOwnSwitchOwnershipPercentageAuto;
  }

  public EventInsights2018 winningOwnSwitchOwnershipPercentageTeleop(@javax.annotation.Nonnull Float winningOwnSwitchOwnershipPercentageTeleop) {
    
    this.winningOwnSwitchOwnershipPercentageTeleop = winningOwnSwitchOwnershipPercentageTeleop;
    return this;
  }

  /**
   * Average own switch ownership percentage for the winning alliance during teleop.
   * @return winningOwnSwitchOwnershipPercentageTeleop
   */
  @javax.annotation.Nonnull

  public Float getWinningOwnSwitchOwnershipPercentageTeleop() {
    return winningOwnSwitchOwnershipPercentageTeleop;
  }


  public void setWinningOwnSwitchOwnershipPercentageTeleop(@javax.annotation.Nonnull Float winningOwnSwitchOwnershipPercentageTeleop) {
    this.winningOwnSwitchOwnershipPercentageTeleop = winningOwnSwitchOwnershipPercentageTeleop;
  }

  public EventInsights2018 winningScaleOwnershipPercentage(@javax.annotation.Nonnull Float winningScaleOwnershipPercentage) {
    
    this.winningScaleOwnershipPercentage = winningScaleOwnershipPercentage;
    return this;
  }

  /**
   * Average scale ownership percentage for the winning alliance.
   * @return winningScaleOwnershipPercentage
   */
  @javax.annotation.Nonnull

  public Float getWinningScaleOwnershipPercentage() {
    return winningScaleOwnershipPercentage;
  }


  public void setWinningScaleOwnershipPercentage(@javax.annotation.Nonnull Float winningScaleOwnershipPercentage) {
    this.winningScaleOwnershipPercentage = winningScaleOwnershipPercentage;
  }

  public EventInsights2018 winningScaleOwnershipPercentageAuto(@javax.annotation.Nonnull Float winningScaleOwnershipPercentageAuto) {
    
    this.winningScaleOwnershipPercentageAuto = winningScaleOwnershipPercentageAuto;
    return this;
  }

  /**
   * Average scale ownership percentage for the winning alliance during auto.
   * @return winningScaleOwnershipPercentageAuto
   */
  @javax.annotation.Nonnull

  public Float getWinningScaleOwnershipPercentageAuto() {
    return winningScaleOwnershipPercentageAuto;
  }


  public void setWinningScaleOwnershipPercentageAuto(@javax.annotation.Nonnull Float winningScaleOwnershipPercentageAuto) {
    this.winningScaleOwnershipPercentageAuto = winningScaleOwnershipPercentageAuto;
  }

  public EventInsights2018 winningScaleOwnershipPercentageTeleop(@javax.annotation.Nonnull Float winningScaleOwnershipPercentageTeleop) {
    
    this.winningScaleOwnershipPercentageTeleop = winningScaleOwnershipPercentageTeleop;
    return this;
  }

  /**
   * Average scale ownership percentage for the winning alliance during teleop.
   * @return winningScaleOwnershipPercentageTeleop
   */
  @javax.annotation.Nonnull

  public Float getWinningScaleOwnershipPercentageTeleop() {
    return winningScaleOwnershipPercentageTeleop;
  }


  public void setWinningScaleOwnershipPercentageTeleop(@javax.annotation.Nonnull Float winningScaleOwnershipPercentageTeleop) {
    this.winningScaleOwnershipPercentageTeleop = winningScaleOwnershipPercentageTeleop;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventInsights2018 eventInsights2018 = (EventInsights2018) o;
    return Objects.equals(this.autoQuestAchieved, eventInsights2018.autoQuestAchieved) &&
        Objects.equals(this.averageBoostPlayed, eventInsights2018.averageBoostPlayed) &&
        Objects.equals(this.averageEndgamePoints, eventInsights2018.averageEndgamePoints) &&
        Objects.equals(this.averageForcePlayed, eventInsights2018.averageForcePlayed) &&
        Objects.equals(this.averageFoulScore, eventInsights2018.averageFoulScore) &&
        Objects.equals(this.averagePointsAuto, eventInsights2018.averagePointsAuto) &&
        Objects.equals(this.averagePointsTeleop, eventInsights2018.averagePointsTeleop) &&
        Objects.equals(this.averageRunPointsAuto, eventInsights2018.averageRunPointsAuto) &&
        Objects.equals(this.averageScaleOwnershipPoints, eventInsights2018.averageScaleOwnershipPoints) &&
        Objects.equals(this.averageScaleOwnershipPointsAuto, eventInsights2018.averageScaleOwnershipPointsAuto) &&
        Objects.equals(this.averageScaleOwnershipPointsTeleop, eventInsights2018.averageScaleOwnershipPointsTeleop) &&
        Objects.equals(this.averageScore, eventInsights2018.averageScore) &&
        Objects.equals(this.averageSwitchOwnershipPoints, eventInsights2018.averageSwitchOwnershipPoints) &&
        Objects.equals(this.averageSwitchOwnershipPointsAuto, eventInsights2018.averageSwitchOwnershipPointsAuto) &&
        Objects.equals(this.averageSwitchOwnershipPointsTeleop, eventInsights2018.averageSwitchOwnershipPointsTeleop) &&
        Objects.equals(this.averageVaultPoints, eventInsights2018.averageVaultPoints) &&
        Objects.equals(this.averageWinMargin, eventInsights2018.averageWinMargin) &&
        Objects.equals(this.averageWinScore, eventInsights2018.averageWinScore) &&
        Objects.equals(this.boostPlayedCounts, eventInsights2018.boostPlayedCounts) &&
        Objects.equals(this.climbCounts, eventInsights2018.climbCounts) &&
        Objects.equals(this.faceTheBossAchieved, eventInsights2018.faceTheBossAchieved) &&
        Objects.equals(this.forcePlayedCounts, eventInsights2018.forcePlayedCounts) &&
        Objects.equals(this.highScore, eventInsights2018.highScore) &&
        Objects.equals(this.levitatePlayedCounts, eventInsights2018.levitatePlayedCounts) &&
        Objects.equals(this.runCountsAuto, eventInsights2018.runCountsAuto) &&
        Objects.equals(this.scaleNeutralPercentage, eventInsights2018.scaleNeutralPercentage) &&
        Objects.equals(this.scaleNeutralPercentageAuto, eventInsights2018.scaleNeutralPercentageAuto) &&
        Objects.equals(this.scaleNeutralPercentageTeleop, eventInsights2018.scaleNeutralPercentageTeleop) &&
        Objects.equals(this.switchOwnedCountsAuto, eventInsights2018.switchOwnedCountsAuto) &&
        Objects.equals(this.unicornMatches, eventInsights2018.unicornMatches) &&
        Objects.equals(this.winningOppSwitchDenialPercentageTeleop, eventInsights2018.winningOppSwitchDenialPercentageTeleop) &&
        Objects.equals(this.winningOwnSwitchOwnershipPercentage, eventInsights2018.winningOwnSwitchOwnershipPercentage) &&
        Objects.equals(this.winningOwnSwitchOwnershipPercentageAuto, eventInsights2018.winningOwnSwitchOwnershipPercentageAuto) &&
        Objects.equals(this.winningOwnSwitchOwnershipPercentageTeleop, eventInsights2018.winningOwnSwitchOwnershipPercentageTeleop) &&
        Objects.equals(this.winningScaleOwnershipPercentage, eventInsights2018.winningScaleOwnershipPercentage) &&
        Objects.equals(this.winningScaleOwnershipPercentageAuto, eventInsights2018.winningScaleOwnershipPercentageAuto) &&
        Objects.equals(this.winningScaleOwnershipPercentageTeleop, eventInsights2018.winningScaleOwnershipPercentageTeleop);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoQuestAchieved, averageBoostPlayed, averageEndgamePoints, averageForcePlayed, averageFoulScore, averagePointsAuto, averagePointsTeleop, averageRunPointsAuto, averageScaleOwnershipPoints, averageScaleOwnershipPointsAuto, averageScaleOwnershipPointsTeleop, averageScore, averageSwitchOwnershipPoints, averageSwitchOwnershipPointsAuto, averageSwitchOwnershipPointsTeleop, averageVaultPoints, averageWinMargin, averageWinScore, boostPlayedCounts, climbCounts, faceTheBossAchieved, forcePlayedCounts, highScore, levitatePlayedCounts, runCountsAuto, scaleNeutralPercentage, scaleNeutralPercentageAuto, scaleNeutralPercentageTeleop, switchOwnedCountsAuto, unicornMatches, winningOppSwitchDenialPercentageTeleop, winningOwnSwitchOwnershipPercentage, winningOwnSwitchOwnershipPercentageAuto, winningOwnSwitchOwnershipPercentageTeleop, winningScaleOwnershipPercentage, winningScaleOwnershipPercentageAuto, winningScaleOwnershipPercentageTeleop);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventInsights2018 {\n");
    sb.append("    autoQuestAchieved: ").append(toIndentedString(autoQuestAchieved)).append("\n");
    sb.append("    averageBoostPlayed: ").append(toIndentedString(averageBoostPlayed)).append("\n");
    sb.append("    averageEndgamePoints: ").append(toIndentedString(averageEndgamePoints)).append("\n");
    sb.append("    averageForcePlayed: ").append(toIndentedString(averageForcePlayed)).append("\n");
    sb.append("    averageFoulScore: ").append(toIndentedString(averageFoulScore)).append("\n");
    sb.append("    averagePointsAuto: ").append(toIndentedString(averagePointsAuto)).append("\n");
    sb.append("    averagePointsTeleop: ").append(toIndentedString(averagePointsTeleop)).append("\n");
    sb.append("    averageRunPointsAuto: ").append(toIndentedString(averageRunPointsAuto)).append("\n");
    sb.append("    averageScaleOwnershipPoints: ").append(toIndentedString(averageScaleOwnershipPoints)).append("\n");
    sb.append("    averageScaleOwnershipPointsAuto: ").append(toIndentedString(averageScaleOwnershipPointsAuto)).append("\n");
    sb.append("    averageScaleOwnershipPointsTeleop: ").append(toIndentedString(averageScaleOwnershipPointsTeleop)).append("\n");
    sb.append("    averageScore: ").append(toIndentedString(averageScore)).append("\n");
    sb.append("    averageSwitchOwnershipPoints: ").append(toIndentedString(averageSwitchOwnershipPoints)).append("\n");
    sb.append("    averageSwitchOwnershipPointsAuto: ").append(toIndentedString(averageSwitchOwnershipPointsAuto)).append("\n");
    sb.append("    averageSwitchOwnershipPointsTeleop: ").append(toIndentedString(averageSwitchOwnershipPointsTeleop)).append("\n");
    sb.append("    averageVaultPoints: ").append(toIndentedString(averageVaultPoints)).append("\n");
    sb.append("    averageWinMargin: ").append(toIndentedString(averageWinMargin)).append("\n");
    sb.append("    averageWinScore: ").append(toIndentedString(averageWinScore)).append("\n");
    sb.append("    boostPlayedCounts: ").append(toIndentedString(boostPlayedCounts)).append("\n");
    sb.append("    climbCounts: ").append(toIndentedString(climbCounts)).append("\n");
    sb.append("    faceTheBossAchieved: ").append(toIndentedString(faceTheBossAchieved)).append("\n");
    sb.append("    forcePlayedCounts: ").append(toIndentedString(forcePlayedCounts)).append("\n");
    sb.append("    highScore: ").append(toIndentedString(highScore)).append("\n");
    sb.append("    levitatePlayedCounts: ").append(toIndentedString(levitatePlayedCounts)).append("\n");
    sb.append("    runCountsAuto: ").append(toIndentedString(runCountsAuto)).append("\n");
    sb.append("    scaleNeutralPercentage: ").append(toIndentedString(scaleNeutralPercentage)).append("\n");
    sb.append("    scaleNeutralPercentageAuto: ").append(toIndentedString(scaleNeutralPercentageAuto)).append("\n");
    sb.append("    scaleNeutralPercentageTeleop: ").append(toIndentedString(scaleNeutralPercentageTeleop)).append("\n");
    sb.append("    switchOwnedCountsAuto: ").append(toIndentedString(switchOwnedCountsAuto)).append("\n");
    sb.append("    unicornMatches: ").append(toIndentedString(unicornMatches)).append("\n");
    sb.append("    winningOppSwitchDenialPercentageTeleop: ").append(toIndentedString(winningOppSwitchDenialPercentageTeleop)).append("\n");
    sb.append("    winningOwnSwitchOwnershipPercentage: ").append(toIndentedString(winningOwnSwitchOwnershipPercentage)).append("\n");
    sb.append("    winningOwnSwitchOwnershipPercentageAuto: ").append(toIndentedString(winningOwnSwitchOwnershipPercentageAuto)).append("\n");
    sb.append("    winningOwnSwitchOwnershipPercentageTeleop: ").append(toIndentedString(winningOwnSwitchOwnershipPercentageTeleop)).append("\n");
    sb.append("    winningScaleOwnershipPercentage: ").append(toIndentedString(winningScaleOwnershipPercentage)).append("\n");
    sb.append("    winningScaleOwnershipPercentageAuto: ").append(toIndentedString(winningScaleOwnershipPercentageAuto)).append("\n");
    sb.append("    winningScaleOwnershipPercentageTeleop: ").append(toIndentedString(winningScaleOwnershipPercentageTeleop)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

