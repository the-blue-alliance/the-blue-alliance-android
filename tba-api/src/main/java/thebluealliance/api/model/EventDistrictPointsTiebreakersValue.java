/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package thebluealliance.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * EventDistrictPointsTiebreakersValue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-12T10:04:04.013721-06:00[America/Chicago]", comments = "Generator version: 7.10.0")
public class EventDistrictPointsTiebreakersValue {
  public static final String SERIALIZED_NAME_HIGHEST_QUAL_SCORES = "highest_qual_scores";
  @SerializedName(SERIALIZED_NAME_HIGHEST_QUAL_SCORES)
  @javax.annotation.Nullable
  private List<Integer> highestQualScores = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUAL_WINS = "qual_wins";
  @SerializedName(SERIALIZED_NAME_QUAL_WINS)
  @javax.annotation.Nullable
  private Integer qualWins;

  public EventDistrictPointsTiebreakersValue() {
  }

  public EventDistrictPointsTiebreakersValue highestQualScores(@javax.annotation.Nullable List<Integer> highestQualScores) {
    
    this.highestQualScores = highestQualScores;
    return this;
  }

  public EventDistrictPointsTiebreakersValue addHighestQualScoresItem(Integer highestQualScoresItem) {
    if (this.highestQualScores == null) {
      this.highestQualScores = new ArrayList<>();
    }
    this.highestQualScores.add(highestQualScoresItem);
    return this;
  }

  /**
   * Get highestQualScores
   * @return highestQualScores
   */
  @javax.annotation.Nullable

  public List<Integer> getHighestQualScores() {
    return highestQualScores;
  }


  public void setHighestQualScores(@javax.annotation.Nullable List<Integer> highestQualScores) {
    this.highestQualScores = highestQualScores;
  }

  public EventDistrictPointsTiebreakersValue qualWins(@javax.annotation.Nullable Integer qualWins) {
    
    this.qualWins = qualWins;
    return this;
  }

  /**
   * Get qualWins
   * @return qualWins
   */
  @javax.annotation.Nullable

  public Integer getQualWins() {
    return qualWins;
  }


  public void setQualWins(@javax.annotation.Nullable Integer qualWins) {
    this.qualWins = qualWins;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventDistrictPointsTiebreakersValue eventDistrictPointsTiebreakersValue = (EventDistrictPointsTiebreakersValue) o;
    return Objects.equals(this.highestQualScores, eventDistrictPointsTiebreakersValue.highestQualScores) &&
        Objects.equals(this.qualWins, eventDistrictPointsTiebreakersValue.qualWins);
  }

  @Override
  public int hashCode() {
    return Objects.hash(highestQualScores, qualWins);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventDistrictPointsTiebreakersValue {\n");
    sb.append("    highestQualScores: ").append(toIndentedString(highestQualScores)).append("\n");
    sb.append("    qualWins: ").append(toIndentedString(qualWins)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

