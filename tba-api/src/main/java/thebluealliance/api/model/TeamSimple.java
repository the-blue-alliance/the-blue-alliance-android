/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package thebluealliance.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * TeamSimple
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-12T10:04:04.013721-06:00[America/Chicago]", comments = "Generator version: 7.10.0")
public class TeamSimple {
  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  @javax.annotation.Nonnull
  private String key;

  public static final String SERIALIZED_NAME_TEAM_NUMBER = "team_number";
  @SerializedName(SERIALIZED_NAME_TEAM_NUMBER)
  @javax.annotation.Nonnull
  private Integer teamNumber;

  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  @javax.annotation.Nonnull
  private String nickname;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  @javax.annotation.Nullable
  private String city;

  public static final String SERIALIZED_NAME_STATE_PROV = "state_prov";
  @SerializedName(SERIALIZED_NAME_STATE_PROV)
  @javax.annotation.Nullable
  private String stateProv;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  @javax.annotation.Nullable
  private String country;

  public TeamSimple() {
  }

  public TeamSimple key(@javax.annotation.Nonnull String key) {
    
    this.key = key;
    return this;
  }

  /**
   * TBA team key with the format &#x60;frcXXXX&#x60; with &#x60;XXXX&#x60; representing the team number.
   * @return key
   */
  @javax.annotation.Nonnull

  public String getKey() {
    return key;
  }


  public void setKey(@javax.annotation.Nonnull String key) {
    this.key = key;
  }

  public TeamSimple teamNumber(@javax.annotation.Nonnull Integer teamNumber) {
    
    this.teamNumber = teamNumber;
    return this;
  }

  /**
   * Official team number issued by FIRST.
   * @return teamNumber
   */
  @javax.annotation.Nonnull

  public Integer getTeamNumber() {
    return teamNumber;
  }


  public void setTeamNumber(@javax.annotation.Nonnull Integer teamNumber) {
    this.teamNumber = teamNumber;
  }

  public TeamSimple nickname(@javax.annotation.Nonnull String nickname) {
    
    this.nickname = nickname;
    return this;
  }

  /**
   * Team nickname provided by FIRST.
   * @return nickname
   */
  @javax.annotation.Nonnull

  public String getNickname() {
    return nickname;
  }


  public void setNickname(@javax.annotation.Nonnull String nickname) {
    this.nickname = nickname;
  }

  public TeamSimple name(@javax.annotation.Nonnull String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Official long name registered with FIRST.
   * @return name
   */
  @javax.annotation.Nonnull

  public String getName() {
    return name;
  }


  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }

  public TeamSimple city(@javax.annotation.Nullable String city) {
    
    this.city = city;
    return this;
  }

  /**
   * City of team derived from parsing the address registered with FIRST.
   * @return city
   */
  @javax.annotation.Nullable

  public String getCity() {
    return city;
  }


  public void setCity(@javax.annotation.Nullable String city) {
    this.city = city;
  }

  public TeamSimple stateProv(@javax.annotation.Nullable String stateProv) {
    
    this.stateProv = stateProv;
    return this;
  }

  /**
   * State of team derived from parsing the address registered with FIRST.
   * @return stateProv
   */
  @javax.annotation.Nullable

  public String getStateProv() {
    return stateProv;
  }


  public void setStateProv(@javax.annotation.Nullable String stateProv) {
    this.stateProv = stateProv;
  }

  public TeamSimple country(@javax.annotation.Nullable String country) {
    
    this.country = country;
    return this;
  }

  /**
   * Country of team derived from parsing the address registered with FIRST.
   * @return country
   */
  @javax.annotation.Nullable

  public String getCountry() {
    return country;
  }


  public void setCountry(@javax.annotation.Nullable String country) {
    this.country = country;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamSimple teamSimple = (TeamSimple) o;
    return Objects.equals(this.key, teamSimple.key) &&
        Objects.equals(this.teamNumber, teamSimple.teamNumber) &&
        Objects.equals(this.nickname, teamSimple.nickname) &&
        Objects.equals(this.name, teamSimple.name) &&
        Objects.equals(this.city, teamSimple.city) &&
        Objects.equals(this.stateProv, teamSimple.stateProv) &&
        Objects.equals(this.country, teamSimple.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, teamNumber, nickname, name, city, stateProv, country);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamSimple {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    teamNumber: ").append(toIndentedString(teamNumber)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    stateProv: ").append(toIndentedString(stateProv)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

